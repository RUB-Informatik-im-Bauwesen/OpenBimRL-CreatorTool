[
    {
        "id": "98cf5a0e-8003-41b7-be12-c079447ca0f3",
        "name": "Input Functions",
        "color": "LemonChiffon",
        "items": [
            {
                "id": "27aa4cc6-0ace-48cb-85d7-3f698f2ae43a",
                "type": "inputType",
                "data": {
                    "name": "input.textInput",
                    "icon": "exclamation-circle-fill",
                    "description": "An simple node holding a text value and displays it as a label.",
                    "label": "TEXT HERE",
                    "selected": false,
                    "outputs": [{ "index": "0", "name": "text" }]
                }
            }
        ]
    },
    {
        "id": "0bd33cd2-72e1-4ee9-a22d-02f58dee6cff",
        "name": "Identifiers",
        "color": "LightPink",
        "items": [
            {
                "id": "c351bba9-abb1-423f-9277-5b11e660c402",
                "type": "ruleIdentifier",
                "data": {
                    "name": "RuleIdentifier",
                    "icon": "exclamation-circle-fill",
                    "description": "The transferred value is stored as a usable identifier during further rule processing. The identifier is labeled and usable according to the text value of the node.",
                    "label": "IDENTIFIER HERE",
                    "selected": false,
                    "inputs": [{ "index": "0", "name": "ingoing" }],
                    "outputs": [{ "index": "0", "name": "outgoing" }]
                }
            }
        ]
    },
    {
        "id": "c93a7416-c105-4de1-b15d-5e9b41a9f09d",
        "name": "IFC Functions",
        "color": "LightCyan",
        "items": [
            {
                "id": "326f997c-3a9d-4ad4-a3bf-845d9639faf0",
                "type": "functionType",
                "data": {
                    "name": "ifc.addRepresentationItemToEntity",
                    "icon": "exclamation-circle-fill",
                    "description": "Adds a representation item to the model.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement_List" },
                        { "index": "1", "name": "IfcRepresentationItem_List" },
                        { "index": "2", "name": "Identifier" },
                        { "index": "3", "name": "Type" }
                    ],
                    "outputs": [{ "index": "0", "name": "shape_List" }],
                    "selected": false
                }
            },
            {
                "id": "66fb9d61-5957-4797-83d3-31412930523d",
                "type": "functionType",
                "data": {
                    "name": "ifc.getCurveLength",
                    "icon": "exclamation-circle-fill",
                    "description": "Calculates the length of a Curve (like an IfcPolyline).",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcRepresentationItem_List" }],
                    "outputs": [{ "index": "0", "name": "double_List" }],
                    "selected": false
                }
            },
            {
                "id": "7e0efab4-863c-41b3-9fa9-6915152f7431",
                "type": "functionType",
                "data": {
                    "name": "ifc.createPolyline",
                    "icon": "exclamation-circle-fill",
                    "description": "Creates a polyline based on a list of Vector3D.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "Vector3D_List" }],
                    "outputs": [{ "index": "0", "name": "IfcPolyline" }],
                    "selected": false
                }
            },
            {
                "id": "1464781f-1668-482e-82f2-457c551a5a31",
                "type": "functionType",
                "data": {
                    "icon": "exclamation-circle-fill",
                    "name": "ifc.getElementById",
                    "description": "Retrieves the IFC entity of a specific id from the model.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "GUID" }],
                    "outputs": [{ "index": "0", "name": "IfcElement" }],
                    "selected": false
                }
            },
            {
                "id": "755872ff-23c6-4268-8599-f655d800c383",
                "type": "functionType",
                "data": {
                    "icon": "exclamation-circle-fill",
                    "name": "ifc.filterByElement",
                    "description": "Filters a IFC model and retrieves all elements of a certain type.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcType" }],
                    "outputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "selected": false
                }
            },
            {
                "id": "11a5a589-1f1b-41e3-83a9-6e669c5e8bef",
                "type": "functionType",
                "data": {
                    "icon": "exclamation-circle-fill",
                    "name": "ifc.filterByGUID",
                    "description": "Filters a IFC model and retrieves the element of a certain GUID.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "GUID" }],
                    "outputs": [{ "index": "0", "name": "IfcElement" }],
                    "selected": false
                }
            },
            {
                "id": "ecdae3b0-be8c-4ef5-b73e-ccf0ff095fef",
                "type": "functionType",
                "data": {
                    "name": "ifc.filterByProperty",
                    "icon": "exclamation-circle-fill",
                    "description": "Filters a list of IFC entities by their property definition. Returns all entities that contain the property information.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement List" },
                        { "index": "1", "name": "PropertySetName" },
                        { "index": "2", "name": "PropertyName" },
                        { "index": "3", "name": "Value" }
                    ],
                    "outputs": [{ "index": "0", "name": "IfcElement List" }],
                    "selected": false
                }
            },
            {
                "id": "6982a63f-47b0-4801-b96f-8c6e932b2113",
                "type": "functionType",
                "data": {
                    "name": "ifc.filterByQuantity",
                    "icon": "exclamation-circle-fill",
                    "description": "Filters a list of IFC entities by their quantity value. Returns all entities that contain the quantity information.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement List" },
                        { "index": "1", "name": "QuantitySetName" },
                        { "index": "2", "name": "QuantityName" },
                        { "index": "3", "name": "Value" }
                    ],
                    "outputs": [{ "index": "0", "name": "IfcElement List" }],
                    "selected": false
                }
            },
            {
                "id": "4246bb5a-b323-42f8-8a45-67c45686a819",
                "type": "functionType",
                "data": {
                    "icon": "exclamation-circle-fill",
                    "name": "ifc.getIfcType",
                    "description": "Retrieves the class type of an element as String value.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement" }],
                    "outputs": [{ "index": "0", "name": "String" }],
                    "selected": false
                }
            },
            {
                "id": "fb264204-7d22-4ea0-b668-7d8483250ea8",
                "type": "functionType",
                "data": {
                    "name": "ifc.getStorey",
                    "icon": "exclamation-circle-fill",
                    "description": "Find the IfcStorey that is related to a specific entity.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement" }],
                    "outputs": [{ "index": "0", "name": "IfcStorey" }],
                    "selected": false
                }
            },
            {
                "id": "895c05ae-df94-412e-95f4-ecc59d4ab1fb",
                "type": "functionType",
                "data": {
                    "name": "ifc.getElementsInSpatialStructure",
                    "icon": "exclamation-circle-fill",
                    "description": "Find the elements that are included in a spatial structure element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcSpatialStructureElement" }],
                    "outputs": [{ "index": "0", "name": "IfcElementList" }],
                    "selected": false
                }
            },
            {
                "id": "5e820ae7-1b07-4ef3-acaf-f9f96461e330",
                "type": "functionType",
                "data": {
                    "name": "ifc.getQuantity",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the quantity value of a specific entity.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement" },
                        { "index": "1", "name": "QuantitySetName" },
                        { "index": "2", "name": "QuantityName" }
                    ],
                    "outputs": [{ "index": "0", "name": "value" }],
                    "selected": false
                }
            },
            {
                "id": "583deebc-727c-414b-ad17-1e0389325c4f",
                "type": "functionType",
                "data": {
                    "name": "ifc.getAllPropertySetInformation",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the property value of a specific entity.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement" }],
                    "outputs": [{ "index": "0", "name": "Map of PropertyInfo" }],
                    "selected": false
                }
            },
            {
                "id": "ee022a6c-8651-442c-8072-17f5f61e916b",
                "type": "functionType",
                "data": {
                    "name": "ifc.getProperty",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the property value of a specific entity.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement" },
                        { "index": "1", "name": "PropertySetName" },
                        { "index": "2", "name": "PropertyName" }
                    ],
                    "outputs": [{ "index": "0", "name": "value" }],
                    "selected": false
                }
            },
            {
                "id": "28b5b933-49c7-4abc-90ce-7824d6426f29",
                "type": "functionType",
                "data": {
                    "name": "ifc.getPropertyAsString",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the property value of a specific entity as String value.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement" },
                        { "index": "1", "name": "PropertySet_Name" },
                        { "index": "2", "name": "Property_Name" }
                    ],
                    "outputs": [{ "index": "0", "name": "value" }],
                    "selected": false
                }
            },
            {
                "id": "b2aaf0ea-59f5-4dd7-8556-6be3920b23b0",
                "type": "functionType",
                "data": {
                    "name": "ifc.getHeight",
                    "icon": "exclamation-circle-fill",
                    "description": "Calculates the height given a list of entities.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [
                        { "index": "0", "name": "minHeight" },
                        { "index": "1", "name": "maxHeight" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "abc9b14d-d7c9-408f-a242-c5c273c57da9",
                "type": "functionType",
                "data": {
                    "name": "ifc.getOpeningElements",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the opening elements as features of an IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [
                        { "index": "0", "name": "voids_List" },
                        { "index": "1", "name": "fills_List" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "4ad92134-0490-411e-bf33-4733a1bd4953",
                "type": "functionType",
                "data": {
                    "name": "ifc.getGeometry",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the geometry of an IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "Geometry_List" }],
                    "selected": false
                }
            },
            {
                "id": "71c264f0-1012-4aa4-bc54-d8d213a9d80b",
                "type": "functionType",
                "data": {
                    "name": "ifc.getGeometryByElement",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the geometry and groups it, based on the IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "Grouped_Geometry_List" }],
                    "selected": false
                }
            },
            {
                "id": "5882d4a4-a783-49bf-aca3-cc4316f71268",
                "type": "functionType",
                "data": {
                    "name": "ifc.getRepresentationItems",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the representation items based on the IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "item_List" }],
                    "selected": false
                }
            },
            {
                "id": "93f31e44-5d25-4289-811a-e80288a8958b",
                "type": "functionType",
                "data": {
                    "name": "ifc.getGeometryAppearance",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the geometry appearance of an IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "MultiAppearanceShape3D_List" }],
                    "selected": false
                }
            },
            {
                "id": "3025e9f1-b8a4-4a5f-88e9-d8246b0ce5d7",
                "type": "functionType",
                "data": {
                    "name": "ifc.getBoundingBox",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the BoundingBox of an IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement" }],
                    "outputs": [
                        { "index": "0", "name": "Bounds" },
                        { "index": "1", "name": "CenterPoints" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "59fef9ba-26da-4672-a3bd-df68752db758",
                "type": "functionType",
                "data": {
                    "name": "ifc.checkElementIntersection",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks the intersection between lists of elements.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement_List" },
                        { "index": "1", "name": "IfcElement_List" },
                        { "index": "2", "name": "Scale_Factor" }
                    ],
                    "outputs": [{ "index": "0", "name": "Results" }],
                    "selected": false
                }
            },
            {
                "id": "52f81686-6bfd-4d66-84ae-fe5781295487",
                "type": "functionType",
                "data": {
                    "name": "ifc.checkElementIntersectionByCount",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks the intersection between lists of elements restricted by the number of occuring intersections.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement_List" },
                        { "index": "1", "name": "IfcElement_List" },
                        { "index": "2", "name": "Counter" }
                    ],
                    "outputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "selected": false
                }
            },
            {
                "id": "11a478c4-a1b5-4875-92d7-c7365f456ebe",
                "type": "functionType",
                "data": {
                    "name": "ifc.checkSpaceBounds",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks space bounds of a lists of elements and retrieves connected elements.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "selected": false
                }
            },
            {
                "id": "d00cc137-e84f-4b83-86ac-f4da53d0307f",
                "type": "functionType",
                "data": {
                    "name": "ifc.getGlobalID",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrives the GUID of an IFC element.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "ID_List" }],
                    "selected": false
                }
            }
        ]
    },
    {
        "id": "fe1ded2a-8eee-4af0-a521-8216823e1e92",
        "name": "Math Functions",
        "color": "LightCyan",
        "items": [
            {
                "id": "af9d8ccb-be65-4045-a590-82c054de01a5",
                "type": "functionType",
                "data": {
                    "name": "math.addition",
                    "icon": "exclamation-circle-fill",
                    "description": "Performes an addition operator given two number values.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "number" },
                        { "index": "1", "name": "number" }
                    ],
                    "outputs": [{ "index": "0", "name": "result" }],
                    "selected": false
                }
            },
            {
                "id": "6446aa05-f443-432e-8197-10a14531b473",
                "type": "functionType",
                "data": {
                    "name": "math.subtraction",
                    "icon": "exclamation-circle-fill",
                    "description": "Performes an subtraction operator given two number values.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "number" },
                        { "index": "1", "name": "number" }
                    ],
                    "outputs": [{ "index": "0", "name": "result" }],
                    "selected": false
                }
            },
            {
                "id": "cdd89598-7b15-4e22-842d-2df3fa91a25d",
                "type": "functionType",
                "data": {
                    "name": "math.maximum",
                    "icon": "exclamation-circle-fill",
                    "description": "Finds the maximum value in a list of values.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "values" }],
                    "outputs": [{ "index": "0", "name": "maxima" }],
                    "selected": false
                }
            }
        ]
    },
    {
        "id": "a2261355-0fa5-4871-a52a-89dc9e798d8d",
        "name": "Geometry Functions",
        "color": "LightCyan",
        "items": [
            {
                "id": "ad3c2c41-c755-427d-b66e-ecfe1ad33e2d",
                "type": "functionType",
                "data": {
                    "name": "geometry.colorizeGeometryAppearance",
                    "icon": "exclamation-circle-fill",
                    "description": "Colorizes the Appearance of a MultiAppearanceShape3D to a specific color.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "MultiAppearanceShape3D" },
                        { "index": "1", "name": "Red" },
                        { "index": "2", "name": "Yellow" },
                        { "index": "3", "name": "Blue" }
                    ],
                    "outputs": [{ "index": "0", "name": "result" }],
                    "selected": false
                }
            },
            {
                "id": "6236dd3a-04f1-4de7-919f-e5bb107d7d5b",
                "type": "functionType",
                "data": {
                    "name": "geometry.convertStrToVectorList",
                    "icon": "exclamation-circle-fill",
                    "description": "Converts a String to a Vector3D list. (Example: x,y,z;x,y,z;... )",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "String" }],
                    "outputs": [{ "index": "0", "name": "Vector3D_List" }],
                    "selected": false
                }
            },
            {
                "id": "816039f0-c763-4d69-95f2-0a23e291384c",
                "type": "functionType",
                "data": {
                    "name": "geometry.checkNeighborhoodByDistance",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if geometic object are close to each other based on their geometric definitions.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Geometry_List_A" },
                        { "index": "1", "name": "Geometry_List_B" },
                        { "index": "2", "name": "Distance_Treshold" }
                    ],
                    "outputs": [{ "index": "0", "name": "Boolean_Masks_List" }],
                    "selected": false
                }
            },
            {
                "id": "a3b2d0b7-5010-4895-bc8d-791b1148f4db",
                "type": "functionType",
                "data": {
                    "name": "geometry.checkIntersectionByBounds",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if the bounds of geometic objects are intersecting.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Geometry_List_A" },
                        { "index": "1", "name": "Geometry_List_B" }
                    ],
                    "outputs": [{ "index": "0", "name": "Boolean_Masks_List" }],
                    "selected": false
                }
            },
            {
                "id": "0bf44f84-6b09-4c34-982f-5aefa38dabc7",
                "type": "functionType",
                "data": {
                    "name": "geometry.checkIncludedInBounds",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if points of a geometry are included in the the bounds of a geometic objects.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Geometry_List_A" },
                        { "index": "1", "name": "Geometry_List_B" }
                    ],
                    "outputs": [{ "index": "0", "name": "Boolean_Masks_List" }],
                    "selected": false
                }
            },
            {
                "id": "4b7a92ff-db7d-4d8a-a206-a266ae083c39",
                "type": "functionType",
                "data": {
                    "name": "geometry.calculateClosestDistanceToBounds",
                    "icon": "exclamation-circle-fill",
                    "description": "Calculates the distance of bounds by proximity of their coordinates in cardinal directions.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Geometry_List_A" },
                        { "index": "1", "name": "Geometry_List_B" }
                    ],
                    "outputs": [{ "index": "0", "name": "Distances_Lists" }],
                    "selected": false
                }
            },
            {
                "id": "d065f58f-7ad3-4567-b510-623a931d0ab9",
                "type": "functionType",
                "data": {
                    "name": "geometry.createCollisionSphere",
                    "icon": "exclamation-circle-fill",
                    "description": "Creates a spherical geometrie as RegionalBSPTree3D in provided precision for collision detection purposes.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "IfcElement_List" },
                        { "index": "1", "name": "Radius" },
                        { "index": "2", "name": "Subdivisions" }
                    ],
                    "outputs": [{ "index": "0", "name": "RegionBSPTree3D_List" }],
                    "selected": false
                }
            },
            {
                "id": "068c8522-89ea-4652-9fb1-5aec350c1424",
                "type": "functionType",
                "data": {
                    "name": "geometry.convertToRegionBSPTree",
                    "icon": "exclamation-circle-fill",
                    "description": "Converts IFC elements into RegionalBSPTree3D objects.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "IfcElement_List" }],
                    "outputs": [{ "index": "0", "name": "RegionBSPTree3D_List" }],
                    "selected": false
                }
            },
            {
                "id": "4a6244ab-1afa-403a-9deb-ffbb9d7b6dda",
                "type": "functionType",
                "data": {
                    "name": "geometry.loadRepresentationItemGeometry",
                    "icon": "exclamation-circle-fill",
                    "description": "Loads an representation item´newly created into the model context, and therfore into the viewer.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "Shape" }],
                    "outputs": [{ "index": "0", "name": "Geometry" }],
                    "selected": false
                }
            },
            {
                "id": "417ead57-1000-4665-9ab3-dcba16edcdf4",
                "type": "functionType",
                "data": {
                    "name": "geometry.checkIntersection",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if geometies of two RegionalBSPTree3D are intersecting.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "RegionBSPTree3D_List" },
                        { "index": "1", "name": "RegionBSPTree3D_List" }
                    ],
                    "outputs": [{ "index": "0", "name": "FilterMap" }],
                    "selected": false
                }
            },
            {
                "id": "c05322e6-015e-497e-8060-21b636fb63c7",
                "type": "functionType",
                "data": {
                    "name": "geometry.decomposeGeometry",
                    "icon": "exclamation-circle-fill",
                    "description": "Decomposes a GeometryArray into its elementary parts.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "GeometryArray" }],
                    "outputs": [
                        { "index": "0", "name": "coordinates" },
                        { "index": "1", "name": "indices" },
                        { "index": "2", "name": "stripCounts" },
                        { "index": "3", "name": "contourCounts" },
                        { "index": "4", "name": "normals" },
                        { "index": "5", "name": "cetroid" },
                        { "index": "6", "name": "profile" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "0eb5484e-dc4b-4b84-893c-3415c95e2bf1",
                "type": "functionType",
                "data": {
                    "name": "geometry.decomposeVector3D",
                    "icon": "exclamation-circle-fill",
                    "description": "Decomposes a Vector3D into its elementary parts.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "Vector3D" }],
                    "outputs": [
                        { "index": "0", "name": "x" },
                        { "index": "1", "name": "y" },
                        { "index": "2", "name": "z" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "6e72f422-995c-4fc3-8f7e-2df87e376625",
                "type": "functionType",
                "data": {
                    "name": "geometry.createPointGraph",
                    "icon": "exclamation-circle-fill",
                    "description": "Creates a raster of points in an area enclosed in an RegionalBSPTree3D area, producing nodes and edges.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "RegionBSPTree" },
                        { "index": "1", "name": "StepSize" }
                    ],
                    "outputs": [
                        { "index": "0", "name": "nodes" },
                        { "index": "1", "name": "edges" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "b4076a57-22a0-415a-9c3b-069f7b0673e9",
                "type": "functionType",
                "data": {
                    "name": "geometry.createPointGraphNodes",
                    "icon": "exclamation-circle-fill",
                    "description": "Computes nodes for a graph containing with certain parametric behavior, such as for creating triangles or quad patches.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "RegionBSPTree" },
                        { "index": "1", "name": "StepSize" },
                        { "index": "2", "name": "height" },
                        { "index": "3", "name": "jitter" }
                    ],
                    "outputs": [{ "index": "0", "name": "nodes" }],
                    "selected": false
                }
            },
            {
                "id": "008991b7-c226-4e04-9a7a-8b0d545e157d",
                "type": "functionType",
                "data": {
                    "name": "geometry.showGraphColoredByValues",
                    "icon": "exclamation-circle-fill",
                    "description": "Loads the graph information and displays it in the 3D viewer.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "NodeDistanceMap" }],
                    "outputs": [{ "index": "0", "name": "Flag" }],
                    "selected": false
                }
            },
            {
                "id": "587bf003-53b5-45b4-b0c9-1055143b05b8",
                "type": "functionType",
                "data": {
                    "name": "geometry.createPointGraphEdges",
                    "icon": "exclamation-circle-fill",
                    "description": "Connects nodes of an graph by inserting edges of a certain stepsize, provided the nodes are already known.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Nodes" },
                        { "index": "1", "name": "StepSize" }
                    ],
                    "outputs": [{ "index": "0", "name": "edges" }],
                    "selected": false
                }
            },
            {
                "id": "6ad92d9a-be81-47eb-ae89-1e928dfa1c2c",
                "type": "functionType",
                "data": {
                    "name": "geometry.createPointGraphEdgesByReference",
                    "icon": "exclamation-circle-fill",
                    "description": "Connects nodes of an graph by inserting edges of a certain stepsize, provided the nodes are already known. Priorisation on reference nodes.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Nodes" },
                        { "index": "1", "name": "ReferenceNodes" },
                        { "index": "2", "name": "StepSize" }
                    ],
                    "outputs": [{ "index": "0", "name": "edges" }],
                    "selected": false
                }
            },
            {
                "id": "cf3de693-c901-4fab-87a0-00cafcb77ae8",
                "type": "functionType",
                "data": {
                    "name": "geometry.groupGraphEdges",
                    "icon": "exclamation-circle-fill",
                    "description": "Groups edges thogether with its nodes, providing a map of assigned node to edge list pairs.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "Edges" }],
                    "outputs": [{ "index": "0", "name": "node_edge_map" }],
                    "selected": false
                }
            },
            {
                "id": "96cadfd2-38ed-491f-b829-e49e61b56769",
                "type": "functionType",
                "data": {
                    "name": "geometry.unifyRegionBSPTree",
                    "icon": "exclamation-circle-fill",
                    "description": "Joins two RegionalBSPTree3D representations into one.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "RegionBSPTree_List" }],
                    "outputs": [{ "index": "0", "name": "RegionBSPTree" }],
                    "selected": false
                }
            },
            {
                "id": "61b01e06-5efd-439f-9f75-de048403e284",
                "type": "functionType",
                "data": {
                    "name": "geometry.calculateDistancesByOrderedGraphEdges",
                    "icon": "exclamation-circle-fill",
                    "description": "Performs a deepsearch based on distances from an start node to all reachable points in a graph.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Edges" },
                        { "index": "1", "name": "StartNodes" }
                    ],
                    "outputs": [{ "index": "0", "name": "Nodes_Distances" }],
                    "selected": false
                }
            },
            {
                "id": "4ad6b33d-28b7-4857-aa6d-6d03e37a12ba",
                "type": "functionType",
                "data": {
                    "name": "geometry.calculateAStarSearch",
                    "icon": "exclamation-circle-fill",
                    "description": "Performs a shortest path search based on distances from an start node to all reachable end nodes in a graph.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Edges" },
                        { "index": "1", "name": "StartNodes" },
                        { "index": "2", "name": "EndNodes" }
                    ],
                    "outputs": [{ "index": "0", "name": "Paths" }],
                    "selected": false
                }
            },
            {
                "id": "8f71131d-18b8-4c8c-a800-449e54a919b0",
                "type": "functionType",
                "data": {
                    "name": "geometry.checkLinecasts",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if a ray passing through the scene has an intersection with a geometric object.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "RegionBSPTree" },
                        { "index": "1", "name": "Segment3D" }
                    ],
                    "outputs": [{ "index": "0", "name": "Filter" }],
                    "selected": false
                }
            },
            {
                "id": "008991b7-c226-4e04-9a7a-8b0d545e157c",
                "type": "functionType",
                "data": {
                    "name": "geometry.showGraph",
                    "icon": "exclamation-circle-fill",
                    "description": "Loads the graph information and displays it in the 3D viewer.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Nodes" },
                        { "index": "1", "name": "Edges" }
                    ],
                    "outputs": [{ "index": "0", "name": "Flag" }],
                    "selected": false
                }
            },
            {
                "id": "766ac645-dc8f-4c07-8c7f-d7ccd5f8c176",
                "type": "functionType",
                "data": {
                    "name": "geometry.showPaths",
                    "icon": "exclamation-circle-fill",
                    "description": "Loads the paths information and displays it in the 3D viewer.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "Paths" }],
                    "outputs": [{ "index": "0", "name": "Flag" }],
                    "selected": false
                }
            },
            {
                "id": "cd3659b2-58ed-4455-97e2-8c408632606e",
                "type": "functionType",
                "data": {
                    "name": "geometry.getCentroidOfRegionBSPTree",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the centroid of an RegionBSPTree3D.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "RegionBSPTree3D" }],
                    "outputs": [{ "index": "0", "name": "Centroids" }],
                    "selected": false
                }
            },
            {
                "id": "481c88d1-ffba-4836-aac3-432dc13b93bb",
                "type": "functionType",
                "data": {
                    "name": "geometry.convertToVector3D",
                    "icon": "exclamation-circle-fill",
                    "description": "Coverts a Point3d to Vector3D. An z-offset can be specified, if necessary.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Point3D" },
                        { "index": "1", "name": "z_offset_position" }
                    ],
                    "outputs": [{ "index": "0", "name": "Vector3D" }],
                    "selected": false
                }
            }
        ]
    },
    {
        "id": "d6bdcbfe-09d9-4b4c-b270-49c92275ecb7",
        "name": "Filter Functions",
        "color": "LightCyan",
        "items": [
            {
                "id": "b8b11164-7b3f-449d-8604-70f5fbfec68c",
                "type": "functionType",
                "data": {
                    "name": "filter.filterByMasks",
                    "icon": "exclamation-circle-fill",
                    "description": "Filters a list of elements by a list of of masking boolean values.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Objects" },
                        { "index": "1", "name": "Filters" }
                    ],
                    "outputs": [{ "index": "0", "name": "Subset of Objects" }],
                    "selected": false
                }
            },
            {
                "id": "4f685157-3fda-4c5d-9546-e037eca7bcc8",
                "type": "functionType",
                "data": {
                    "name": "filter.filterInvert",
                    "icon": "exclamation-circle-fill",
                    "description": "Inverts the result of a filter. Basically, performing a boolean flip on all values of a list.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "Filters" }],
                    "outputs": [{ "index": "0", "name": "Inverted Filters" }],
                    "selected": false
                }
            }
        ]
    },
    {
        "id": "7f91626d-d809-463a-af52-3744efe8abc6",
        "name": "List Functions",
        "color": "LightCyan",
        "items": [
            {
                "id": "9e617a2c-5c45-4ffd-af7a-75c579925a21",
                "type": "functionType",
                "data": {
                    "name": "list.sum",
                    "icon": "exclamation-circle-fill",
                    "description": "Calculates the sum of all numbers contained in a given list.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "list" }],
                    "outputs": [{ "index": "0", "name": "result" }],
                    "selected": false
                }
            },
            {
                "id": "86472c5b-e6cf-4d0a-9006-0181b6232331",
                "type": "functionType",
                "data": {
                    "name": "list.count",
                    "icon": "exclamation-circle-fill",
                    "description": "Counts the items in a list and returns the number.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "list" }],
                    "outputs": [{ "index": "0", "name": "result" }],
                    "selected": false
                }
            },
            {
                "id": "c3bca634-99bd-401f-89e5-f00a47dcaab9",
                "type": "functionType",
                "data": {
                    "name": "list.getElementAt",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves an item of a specific index contained in a list of elements.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "list" },
                        { "index": "1", "name": "index" }
                    ],
                    "outputs": [{ "index": "0", "name": "item" }],
                    "selected": false
                }
            },
            {
                "id": "0af69fc3-3788-4e8f-a616-7ae0ea8d82e3",
                "type": "functionType",
                "data": {
                    "name": "list.getItemIndexInList",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves an item index of a specific value contained in a list of elements.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "list" },
                        { "index": "1", "name": "item" }
                    ],
                    "outputs": [{ "index": "0", "name": "index" }],
                    "selected": false
                }
            },
            {
                "id": "616f380c-576e-4c56-9a7a-f15e372a5239",
                "type": "functionType",
                "data": {
                    "name": "list.flattenCollection",
                    "icon": "exclamation-circle-fill",
                    "description": "Flattens the hierarchy of an Collection by one level.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "list" }],
                    "outputs": [{ "index": "0", "name": "flattened_list" }],
                    "selected": false
                }
            },
            {
                "id": "cc050a58-1b4d-441b-a71b-4180f9531361",
                "type": "functionType",
                "data": {
                    "name": "list.groupBy",
                    "icon": "exclamation-circle-fill",
                    "description": "Groups a list of items by key and value pairs.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "list" },
                        { "index": "1", "name": "referenceList" }
                    ],
                    "outputs": [
                        { "index": "0", "name": "key" },
                        { "index": "1", "name": "value" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "2804b920-0478-417a-8293-3c83e2481c1c",
                "type": "functionType",
                "data": {
                    "name": "list.createMapByPairs",
                    "icon": "exclamation-circle-fill",
                    "description": "Creates a map of elements, if a key and value list is provided.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "keys" },
                        { "index": "1", "name": "values" }
                    ],
                    "outputs": [
                        { "index": "0", "name": "keys" },
                        { "index": "1", "name": "values" },
                        { "index": "2", "name": "map" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "37c149a0-8f59-4584-9336-c7beb849b851",
                "type": "functionType",
                "data": {
                    "name": "list.getMapValueAtKey",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieve the value in a map by key.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "map" },
                        { "index": "1", "name": "key" }
                    ],
                    "outputs": [{ "index": "0", "name": "value" }],
                    "selected": false
                }
            },
            {
                "id": "75005c68-2d0e-497e-b521-f59c26c78cfe",
                "type": "functionType",
                "data": {
                    "name": "list.getMapValueByKeyList",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieve the value in a map by a list of keys.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "map" },
                        { "index": "1", "name": "keys" }
                    ],
                    "outputs": [{ "index": "0", "name": "values" }],
                    "selected": false
                }
            },
            {
                "id": "75c83cb3-af79-4316-b0dc-41a7442c82e1",
                "type": "functionType",
                "data": {
                    "name": "list.mapInvert",
                    "icon": "exclamation-circle-fill",
                    "description": "Reverses the map, making values to keys and keys to values.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "map" }],
                    "outputs": [{ "index": "0", "name": "invertedMap" }],
                    "selected": false
                }
            },
            {
                "id": "f99d5010-32df-4af0-ae18-5f3c5b36f9c7",
                "type": "functionType",
                "data": {
                    "name": "list.mapFilterByCount",
                    "icon": "exclamation-circle-fill",
                    "description": "Generates a filter mask by number of objects contained in the Map values.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "map" },
                        { "index": "1", "name": "counting_limit" }
                    ],
                    "outputs": [{ "index": "0", "name": "filter" }],
                    "selected": false
                }
            },
            {
                "id": "035a19bb-b94b-461a-9e8a-838b6395d1f7",
                "type": "functionType",
                "data": {
                    "name": "list.mapValueCount",
                    "icon": "exclamation-circle-fill",
                    "description": "Counts the number of objects contained in the Map values and generates a new map based on that.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "map" }],
                    "outputs": [{ "index": "0", "name": "mapCounted" }],
                    "selected": false
                }
            },
            {
                "id": "8d9a814f-5db0-46dc-a6c3-e2609703bb67",
                "type": "functionType",
                "data": {
                    "name": "list.mapKeySet",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the keyset of a assigned map.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "map" }],
                    "outputs": [{ "index": "0", "name": "keySet" }],
                    "selected": false
                }
            },
            {
                "id": "d4bfa083-384a-4309-8f8b-87860e16b4ea",
                "type": "functionType",
                "data": {
                    "name": "list.mapValues",
                    "icon": "exclamation-circle-fill",
                    "description": "Retrieves the values of a assigned map.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "map" }],
                    "outputs": [{ "index": "0", "name": "values" }],
                    "selected": false
                }
            },
            {
                "id": "aac2cd0f-9bf3-4c55-b40a-2c8c41ccadd4",
                "type": "functionType",
                "data": {
                    "name": "list.orderBy",
                    "icon": "exclamation-circle-fill",
                    "description": "Sorts a list of items in ASC or DESC order.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "list" },
                        { "index": "1", "name": "referenceList" },
                        { "index": "2", "name": "order" }
                    ],
                    "outputs": [
                        { "index": "0", "name": "sortedList" },
                        { "index": "1", "name": "sortedReferenceValues" }
                    ],
                    "selected": false
                }
            },
            {
                "id": "85e426db-c403-4943-9584-ce62c600e491",
                "type": "functionType",
                "data": {
                    "name": "list.removeFromList",
                    "icon": "exclamation-circle-fill",
                    "description": "Removes elements from list B in the list A.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "List A" },
                        { "index": "1", "name": "List B" }
                    ],
                    "outputs": [{ "index": "0", "name": "Altered_List_A" }],
                    "selected": false
                }
            },
            {
                "id": "6fd3d37e-c1e0-42cb-beac-fc2d4b648799",
                "type": "functionType",
                "data": {
                    "name": "list.joinCollections",
                    "icon": "exclamation-circle-fill",
                    "description": "Joins two collections to one ArrayList.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "List A" },
                        { "index": "1", "name": "List B" }
                    ],
                    "outputs": [{ "index": "0", "name": "Joined_List" }],
                    "selected": false
                }
            },
            {
                "id": "d9853ab7-91bf-44e1-8cb3-ccf115b951f8",
                "type": "functionType",
                "data": {
                    "name": "list.asList",
                    "icon": "exclamation-circle-fill",
                    "description": "Creates a new Arraylist by converting a formated string text of values.",
                    "label": "Example Text Here",
                    "inputs": [{ "index": "0", "name": "values" }],
                    "outputs": [{ "index": "0", "name": "list" }],
                    "selected": false
                }
            },
            {
                "id": "0f0f927e-3eea-4983-85d5-e91e9158a7ae",
                "type": "functionType",
                "data": {
                    "name": "list.joinItemByItem",
                    "icon": "exclamation-circle-fill",
                    "description": "Joins two collections of same size item by item to one ArrayList.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Collection A" },
                        { "index": "1", "name": "Collection B" }
                    ],
                    "outputs": [{ "index": "0", "name": "Joined_List" }],
                    "selected": false
                }
            },
            {
                "id": "5d074575-493f-42cf-a31a-64428d77fae5",
                "type": "functionType",
                "data": {
                    "name": "list.repeatAsList",
                    "icon": "exclamation-circle-fill",
                    "description": "Creates a new ArrayList of repeated items of a certain amount.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Item" },
                        { "index": "1", "name": "Repeat Counter" }
                    ],
                    "outputs": [{ "index": "0", "name": "ArrayList" }],
                    "selected": false
                }
            },
            {
                "id": "e9d7a7c2-447e-4ebf-b2e4-711d6fab8c5a",
                "type": "functionType",
                "data": {
                    "name": "list.elementIncludedInList",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if a list of elements are included in another set individually.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Elements" },
                        { "index": "1", "name": "InclusionList" }
                    ],
                    "outputs": [{ "index": "0", "name": "ListOfChecks" }],
                    "selected": false
                }
            },
            {
                "id": "eee13c3d-0077-4547-bfec-1526b42813ae",
                "type": "functionType",
                "data": {
                    "name": "list.allElementIncludedInList",
                    "icon": "exclamation-circle-fill",
                    "description": "Checks if a list of elements are included in another set holistically.",
                    "label": "Example Text Here",
                    "inputs": [
                        { "index": "0", "name": "Elements" },
                        { "index": "1", "name": "InclusionList" }
                    ],
                    "outputs": [{ "index": "0", "name": "check" }],
                    "selected": false
                }
            }
        ]
    }
]
